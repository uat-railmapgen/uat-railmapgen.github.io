const __vite__fileDeps=["assets/app-root-BHxwfKlJ.js","assets/chakra-87MJsjx_.js","assets/react-CYUv4v4k.js","assets/index-CGvVPEXp.js","assets/index-Bb8_fFLS.css","assets/rmg-fields-L8HdgqqW.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{r as u,l as d,c as ee,R as te,a as oe,b as se}from"./index-CGvVPEXp.js";import{j as T}from"./chakra-87MJsjx_.js";import{i as ne,d as H,e as D,f as ae,h as ie,j as re,u as ce,k as le,l as N,r as U,P as pe,I as de}from"./react-CYUv4v4k.js";function ys(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}const ue="modulepreload",me=function(e){return"/"+e},x={},he=function(t,o,s){let a=Promise.resolve();if(o&&o.length>0){document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),n=(i==null?void 0:i.nonce)||(i==null?void 0:i.getAttribute("nonce"));a=Promise.all(o.map(c=>{if(c=me(c),c in x)return;x[c]=!0;const l=c.endsWith(".css"),r=l?'[rel="stylesheet"]':"";if(document.querySelector('link[href="'.concat(c,'"]').concat(r)))return;const p=document.createElement("link");if(p.rel=l?"stylesheet":ue,l||(p.as="script",p.crossOrigin=""),p.href=c,n&&p.setAttribute("nonce",n),document.head.appendChild(p),l)return new Promise((k,y)=>{p.addEventListener("load",k),p.addEventListener("error",()=>y(new Error("Unable to preload CSS for ".concat(c))))})}))}return a.then(()=>t()).catch(i=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=i,window.dispatchEvent(n),!n.defaultPrevented)throw i})},ge="操作",fe="应用程序",Te="黑",we="取消",Se="城市",be="组件",ve="确定",ke="继续",ye="复制",Re="编辑",Ae="语言/Language",Ce="理由",$e="名称",Ee="下一步",Me="打开",Oe="调色板",Le="上一步",Pe="删除",xe="重置",_e="设置",Ge="提交",Ie="翻译",He="上传",De="白",Ne={Action:ge,Apps:fe,"Back to list":"返回列表","Background colour":"背景色",Black:Te,Cancel:we,City:Se,Components:be,"Configuration file":"配置文件",Confirm:ve,Continue:ke,"Country/Region":"国家/地区",Copy:ye,Edit:Re,"Foreground colour":"前景色","Go back":"返回",Language:Ae,Justification:Ce,Name:$e,Next:Ee,Open:Me,Palette:Oe,"Please select...":"请选择...",Previous:Le,"Rail Map Generator":"铁路线路图生成器","Rail Map Painter":"地铁线路图绘制器","Rail Map Toolkit":"线路图工具包",Remove:Pe,Reset:xe,"RMG Templates":"RMG 模板","RMP Gallery":"RMP 画廊","Seed Project":"种子项目",Settings:_e,Submit:Ge,Translate:Ie,Upload:He,White:De},Ue="動作",Fe="應用程式",je="黑",Be="取消",Ve="城市",We="元件",Je="確定",qe="繼續",ze="複製",Ye="編輯",Ke="語言/Language",Qe="理由",Xe="名稱",Ze="下一步",et="開啟",tt="調色盤",ot="上一步",st="移除",nt="重設",at="設定",it="提交",rt="翻譯",ct="上載",lt="白",pt={Action:Ue,Apps:Fe,"Back to list":"返回列表","Background colour":"背景色",Black:je,Cancel:Be,City:Ve,Components:We,"Configuration file":"設定檔",Confirm:Je,Continue:qe,Copy:ze,"Country/Region":"國家/地區",Edit:Ye,"Foreground colour":"前景色","Go back":"返回",Language:Ke,Justification:Qe,Name:Xe,Next:Ze,Open:et,Palette:tt,"Please select...":"請選擇...",Previous:ot,"Rail Map Generator":"鐵路路綫圖產生器","Rail Map Painter":"地鐵路綫圖繪製器","Rail Map Toolkit":"路綫圖工具組",Remove:st,Reset:nt,"RMG Templates":"RMG 範本","RMP Gallery":"RMP 畫廊","Seed Project":"種子項目",Settings:at,Submit:it,Translate:rt,Upload:ct,White:lt},dt="言語/Language",ut="パレット",mt="削除",ht={Language:dt,Palette:ut,"Rail Map Generator":"鉄道路線図ジェネレータ","Rail Map Toolkit":"路線図ツールキット",Remove:mt,"RMG Templates":"RMG テンプレート"},gt="조작",ft="앱",Tt="블랙",wt="취소",St="도시",bt="요소",vt="확인",kt="복사",yt="편집",Rt="언어/Language",At="이유",Ct="명칭",$t="다음",Et="열기",Mt="팔레트",Ot="나아가",Lt="삭제",Pt="리셋",xt="설치",_t="제출",Gt="번역",It="업로드",Ht="화이트",Dt={Action:gt,Apps:ft,"Back to list":"다시 목록으로","Background colour":"배경색",Black:Tt,Cancel:wt,City:St,Components:bt,"Configuration file":"환경 설정 파일",Confirm:vt,Copy:kt,"Country/Region":"국가/지역",Edit:yt,"Foreground colour":"전경색","Go back":"되돌아가",Language:Rt,Justification:At,Name:Ct,Next:$t,Open:Et,Palette:Mt,"Please select...":"선택해주세요",Previous:Ot,"Rail Map Generator":"철도 노선도 생성기","Rail Map Painter":"지하철 노선도 그리기","Rail Map Toolkit":"노선도 툴킷",Remove:Lt,Reset:Pt,"RMG Templates":"RMG 템플릿","RMP Gallery":"RMP 갤러리","Seed Project":"종자 프로젝트",Settings:xt,Submit:_t,Translate:Gt,Upload:It,White:Ht};var Nt={en:{},"zh-Hans":Ne,"zh-Hant":pt,ja:ht,ko:Dt};const Ut={header:"Cookies on this website",text1:"At RMG we use cookies to help ensure that our website and services are able to function properly. These cookies are necessary and so are set automatically.",text2:"We would also like to use some cookies to:",item1:"improve our website based on how you use it",text3:"These cookies are optional. If you'd like to accept all optional cookies, select 'Accept all cookies'. If you'd like to reject them, select 'Reject'.",accept:"Accept all cookies",reject:"Reject"},Ft={text1:"The fonts below used in your projects were loaded from our server instead of your device.",text2:"This may cause unnecessary network traffic and slowness especially if your connection is unstable.",text3:"You can download and install these open source and free fonts to get a better experience.",safari:"This is not applicable to Safari users. ☹️"},jt={CookiesModal:Ut,FontsSection:Ft},Bt={header:"本网站的 Cookies",text1:"在 RMG，我们使用 Cookies 来确保本网站及服务可以正常运作。这些 Cookies 是必需的，因此已默认启动。",text2:"我们也会以 Cookies 的方式：",item1:"分析您的使用模式，用来改进本网站",text3:"这些 Cookies 是可选的。如果您想允许所有可选 Cookies，请选择“接受所有 Cookies”。如果您想禁用 Cookies，请选择“拒绝”。",accept:"接受所有 Cookies",reject:"拒绝"},Vt={text1:"您的项目使用的下列字体，是从我们的服务器而不是您的设备加载。",text2:"这可能导致非必要的网络流量，如您的连接不稳定，还会造成加载缓慢。",text3:"您可以下载和安装这些开源免费字体，以提升使用体验。",safari:"不适用于 Safari ☹️"},Wt="关于",Jt="外观",qt="贡献者",zt="深色",Yt="开发者工具",Kt="捐赠者",Qt="浅色",Xt="更多",Zt="好",eo="正在运行",to="保存",oo="切换",so="跟随系统",no="标签页",ao="使用教程",io={CookiesModal:Bt,FontsSection:Vt,About:Wt,"Allow cookies to help improve our website":"允许用 Cookies 帮助改进本网站",Appearance:Jt,"Back to production environment":"返回生产环境","Close all tabs":"关闭所有标签页","Close app":"关闭应用程序","Close current tab":"关闭当前标签页","Close tab":"关闭标签页","Contribution Wiki":"贡献者指南",Contributors:qt,"Current session has been terminated. Please close this window.":"当前会话已被终止，请关闭此窗口。",Dark:zt,"Developer team":"开发者团队",Devtools:Yt,Donators:Kt,"Don't show again":"不再显示","Download desktop app":"下载桌面应用程序","Fonts are slow to load? Learn how to speed it up!":"字体加载太慢？看看如何提速！","GitHub Pages mirror":"GitHub Pages 镜像","GitLab Pages mirror":"GitLab Pages 镜像","Happy Chinese New Year!":"新年快乐！","Help & support":"帮助与支持","Join us on Slack":"加入我们的 Slack 群组",Light:Qt,"Main languages":"主要语言",More:Xt,"More mirrors":"更多镜像","New tab":"新标签页","Notes: Contributors are sorted by number of commits and commit time.":"注：贡献者名单按提交次数和时间排序。",OK:Zt,"Other languages":"其他语言","Pro tip":"提示","Rail Map Toolkit is opened in another window":"线路图工具包已在另一窗口中打开","Raise an Issue on GitHub":"在 GitHub 提交一个 Issue","Refreshing is required for changes to take effect.":"刷新页面后变更才会生效","Resource administrators":"资源管理员","Resource contributors":"资源贡献者","Restart RMT in this window":"在此窗口重新启动工具包",Running:eo,Save:to,"Select an app to start your own rail map design!":"选择一个应用程序来开始你的线路图设计！","Show dev tools for 1 day":"显示开发者工具 1 天",Switch:oo,"Switch to":"切换至",System:so,Tab:no,"Terms and conditions":"条款与细则",Tutorial:ao,"Unable to load contributors":"无法加载贡献者名单","Useful links":"实用链接","Visit GitHub":"访问 GitHub","Web fonts":"网络字体","Welcome to Rail Map Toolkit":"欢迎使用线路图工具包","You cannot open multiple Rail Map Toolkit at the same time. Please close this window.":"您不能同时打开多个线路图工具包，请关闭当前窗口。","You're currently viewing a testing environment.":"您正在浏览测试环境。"},ro={header:"本網站的 Cookies",text1:"在 RMG，我們使用 Cookies 以確保本網站及服務可以正常運作。這些 Cookies 是必需的，因此已預設啟用。",text2:"我們亦會以 Cookies 的方式：",item1:"分析閣下的使用模式，用來改進本網站",text3:"這些 Cookies 是可選的。如果閣下想容許所有可選 Cookies，請選擇「接受所有 Cookies」。如果閣下想禁用 Cookies，請選擇「拒絕」。",accept:"接受所有 Cookies",reject:"拒絕"},co={text1:"你的專案使用的下列字型，是從我們的伺服器而非你的裝置載入。",text2:"這可能導致非必要的網絡流量，如你的連線不穩，還會造成載入緩慢。",text3:"你可以下載及安裝這些開源免費字型，以提升使用體驗。",safari:"不適用於 Safari ☹️"},lo="關於",po="外觀",uo="貢獻者",mo="深色",ho="開發人員工具",go="捐贈者",fo="淺色",To="更多",wo="好",So="運行中",bo="儲存",vo="切換",ko="跟隨系統",yo="分頁",Ro="使用指南",Ao={CookiesModal:ro,FontsSection:co,About:lo,"Allow cookies to help improve our website":"容許以 Cookies 幫助改進本網站",Appearance:po,"Back to production environment":"返回生產環境","Close all tabs":"關閉所有分頁","Close app":"關閉應用程式","Close current tab":"關閉當前分頁","Close tab":"關閉分頁","Contribution Wiki":"貢獻者指南",Contributors:uo,"Current session has been terminated. Please close this window.":"當前工作階段已被終止，請關閉該視窗。",Dark:mo,"Developer team":"開發人員團隊",Devtools:ho,Donators:go,"Don't show again":"不再顯示","Download desktop app":"下載桌面應用程式","Fonts are slow to load? Learn how to speed it up!":"字型載入太慢？看看如何提速！","GitHub Pages mirror":"GitHub Pages 鏡像","GitLab Pages mirror":"GitLab Pages 鏡像","Happy Chinese New Year!":"新年快樂！","Help & support":"幫助及支援","Join us on Slack":"加入我們的 Slack 羣組",Light:fo,"Main languages":"主要語言",More:To,"More mirrors":"更多鏡像","New tab":"新分頁","Notes: Contributors are sorted by number of commits and commit time.":"註：貢獻者列表按提交次數及時間排序。",OK:wo,"Other languages":"其他語言","Pro tip":"小貼士","Rail Map Toolkit is opened in another window":"路綫圖工具組已於另一視窗中開啟","Raise an Issue on GitHub":"於 GitHub 提交一個 Issue","Refreshing is required for changes to take effect.":"重新整理頁面後變更才會生效","Resource administrators":"資源管理員","Resource contributors":"資源貢獻者","Restart RMT in this window":"於該視窗重新啟動工具組",Running:So,Save:bo,"Select an app to start your own rail map design!":"選擇一個應用程式以開始你的路綫圖設計！","Show dev tools for 1 day":"顯示開發人員工具 1 日",Switch:vo,"Switch to":"切換至",System:ko,Tab:yo,"Terms and conditions":"條款及細則",Tutorial:Ro,"Unable to load contributors":"無法載入貢獻者列表","Useful links":"實用連結","Visit GitHub":"造訪 GitHub","Web fonts":"網絡字型","Welcome to Rail Map Toolkit":"歡迎使用路綫圖工具組","You cannot open multiple Rail Map Toolkit at the same time. Please close this window.":"你不能同時開啟多個路綫圖工具組，請關閉當前視窗。","You're currently viewing a testing environment.":"你正在檢視測試環境。"},Co="貢献者",$o="タブ",Eo={Contributors:Co,"Happy Chinese New Year!":"旧正月おめでとう！","Main languages":"主要言語",Tab:$o,"Welcome to Rail Map Toolkit":"路線図ツールキットへようこそ"},Mo={header:"이 웹 사이트의 쿠키",text1:"RMG에서는 쿠키를 사용하여 웹 사이트 및 서비스가 제대로 작동하는지 확인합니다.이러한 쿠키는 필수이므로 기본적으로 시작됩니다.",text2:"저희도 쿠키 방식으로：",item1:"당신의 사용 패턴을 분석하여, 본 사이트를 개선합니다",text3:"이 쿠키들은 선택 사항입니다.모든 선택 가능한 쿠키를 허용하려면 '모든 쿠키 허용'을 선택하십시오.쿠키를 사용하지 않으려면 '거부'를 선택하십시오.",accept:"모든 쿠키 허용",reject:"거부"},Oo="관한",Lo="화면 스타일",Po="기여자",xo="다크 모드",_o="라이트 모드",Go="저장",Io="시스템 모드",Ho={CookiesModal:Mo,About:Oo,"Allow cookies to help improve our website":"쿠키를 사용하여 이 웹 사이트를 개선할 수 있도록 허용",Appearance:Lo,"Contribution Wiki":"기여자 안내",Contributors:Po,"Core contributors":"핵심 기여자",Dark:xo,"Happy Chinese New Year!":"새해 복 많이 받으세요!",Light:_o,"Refreshing is required for changes to take effect.":"페이지를 새로 고친 후에만 변경 가능","Resource administrators":"자원 관리자","Resource contributors":"자원 기여자",Save:Go,"Select an app to start your own rail map design!":"응용 프로그램을 선택하여 노선도 설계를 시작하십시오.","Switch to":"곳으로 전환",System:Io,"Terms and conditions":"조항과 세칙","Visit GitHub":"GitHub 방문하기","Welcome to Rail Map Toolkit":"노선도 툴킷에 오신 것을 환영합니다"},Do=new u.I18nBuilder().use(ne).withAppName("Rail Map Toolkit").withLng(u.getLanguage()).withDefaultResource(Nt).withResource("en",jt).withResource("zh-Hans",io).withResource("zh-Hant",Ao).withResource("ja",Eo).withResource("ko",Ho).build(),No=()=>{document.querySelector('link[rel="canonical"]').setAttribute("href",window.location.origin)};No();var h=(e=>(e.OPENED_TABS="rmg-home__openedTabs",e.ACTIVE_TAB="rmg-home__activeTab",e.LAST_SHOW_DEVTOOLS="lastShowDevtools",e.SHOW_FONT_ADVICE="showFontAdvice",e.ACCOUNT="rmg-home__account",e))(h||{}),F=(e=>(e.APP_LOAD="APP_LOAD",e.OPEN_APP="OPEN_APP",e.CLOSE_APP="CLOSE_APP",e.OPEN_LINK="OPEN_LINK",e.TOGGLE_NAV_MENU="TOGGLE_NAV_MENU",e.CHANGE_LANGUAGE="CHANGE_LANGUAGE",e.SHOW_DEVTOOLS="SHOW_DEVTOOLS",e.RAISE_ISSUE="RAISE_ISSUE",e.JOIN_SLACK="JOIN_SLACK",e.DOWNLOAD_FONT="DOWNLOAD_FONT",e))(F||{});const _="rmg-home:frame-",$={APP:"app",SEARCH_PARAMS:"searchParams",HASH_PARAMS:"hashParams"};var S=(e=>(e.AUTH_REGISTER="/auth/register",e.AUTH_LOGIN="/auth/login",e.AUTH_SEND_VERIFICATION_EMAIL="/auth/send-verification-email",e.AUTH_SEND_RESET_PASSWORD_EMAIL="/auth/forgot-password",e.AUTH_RESET_PASSWORD="/auth/reset-password",e.AUTH_REFRESH="/auth/refresh-tokens",e.AUTH_LOGOUT="/auth/logout",e.USER="/users",e.SUBSCRIPTION="/subscription",e.SUBSCRIPTION_REDEEM="/subscription/redeem",e.SAVES="/saves",e))(S||{});const b="https://railmapgen.org/v1";var j=(e=>(e.RMP="rmp__param",e))(j||{});const Uo=e=>new Promise(t=>{setTimeout(t,e,"Timeout after ".concat(e/1e3," seconds"))}),Fo=()=>{const e=navigator.userAgent;return e.includes("Safari")&&!e.includes("Chrome")},R=(e,t,o)=>{const s=new URL(e,window.location.href);return s.search=t!=null?t:s.search,s.hash=o!=null?o:s.hash,s.pathname+s.search+s.hash},B=async(e,t,o,s)=>{const a={accept:"application/json","Content-Type":"application/json"},i=structuredClone(a);o&&(i.Authorization="Bearer ".concat(o));const n=await fetch("".concat(b).concat(e),{headers:i,...t});if(n.status!==401)return{rep:n,token:o,refreshToken:s};if(!s)return{rep:n,token:o,refreshToken:void 0};const c=await fetch("".concat(b).concat(S.AUTH_REFRESH),{method:"POST",headers:a,body:JSON.stringify({refreshToken:s})});if(c.status!==200)return{rep:n,token:o,refreshToken:void 0};const l=await c.json(),r=l.access.token;return a.Authorization="Bearer ".concat(r),{rep:await fetch("".concat(b).concat(e),{headers:a,...t}),token:r,refreshToken:l.refresh.token}},jo=async e=>{const t={accept:"application/json","Content-Type":"application/json"},o=await fetch("".concat(b).concat(S.AUTH_REFRESH),{method:"POST",headers:t,body:JSON.stringify({refreshToken:e})});return o.status!==200?void 0:await o.json()},Bo=async(e,t="SHA-256")=>{const s=new TextEncoder().encode(e),a=await crypto.subtle.digest(t,s);return Array.from(new Uint8Array(a)).map(n=>n.toString(16).padStart(2,"0")).join("")},M={RMP_CLOUD:!1,RMP_EXPORT:!1},Vo={isLoggedIn:!1,id:void 0,name:"",email:void 0,token:void 0,expires:void 0,refreshToken:void 0,refreshExpires:void 0,activeSubscriptions:M,currentSaveId:void 0,saves:[]},v=H("account/getSaveList",async(e,{getState:t,dispatch:o,rejectWithValue:s})=>{const{token:a,refreshToken:i}=t().account;a||s("No token.");const{rep:n,token:c,refreshToken:l}=await B(S.SAVES,{},a,i);return(!c||!l)&&(o(C()),s("Can not recover from expired refresh token.")),o(O({access:c,refresh:l})),n.status!==200&&s(n.text),await n.json()}),$s=H("account/fetchLogin",async(e,{dispatch:t})=>{const{email:o,password:s}=e,a=await fetch(b+S.AUTH_LOGIN,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({email:o,password:s})});if(a.status!==200)return{error:await a.text(),username:void 0};const{user:{name:i,id:n},tokens:{access:{token:c,expires:l},refresh:{token:r,expires:p}}}=await a.json();return t(W({id:n,name:i,email:o,token:c,expires:l,refreshToken:r,refreshExpires:p})),t(v()),{error:void 0,username:i}}),V=D({name:"account",initialState:Vo,reducers:{login:(e,t)=>{e.isLoggedIn=!0,e.id=t.payload.id,e.name=t.payload.name,e.email=t.payload.email,e.token=t.payload.token,e.expires=t.payload.expires,e.refreshToken=t.payload.refreshToken,e.refreshExpires=t.payload.refreshExpires,e.activeSubscriptions=M,e.currentSaveId=void 0,e.saves=[]},logout:e=>{e.isLoggedIn=!1,e.id=void 0,e.name=void 0,e.email=void 0,e.token=void 0,e.expires=void 0,e.refreshToken=void 0,e.refreshExpires=void 0,e.activeSubscriptions=M,e.currentSaveId=void 0,e.saves=[]},updateName:(e,t)=>{e.name=t.payload},setToken:(e,t)=>{e.token=t.payload.access,e.refreshToken=t.payload.refresh},setExpires:(e,t)=>{e.expires=t.payload.expires,e.refreshExpires=t.payload.refreshExpires},setActiveSubscriptions:(e,t)=>{e.activeSubscriptions=t.payload}},extraReducers:e=>{e.addCase(v.fulfilled,(t,o)=>{t.currentSaveId=o.payload.currentSaveId,t.saves=o.payload.saves}).addCase(v.rejected,(t,o)=>{console.log(t,o.payload)})}}),{login:W,logout:C,updateName:Es,setActiveSubscriptions:Ms,setToken:O,setExpires:Wo}=V.actions,Jo=V.reducer,L=e=>e?["app","devtool"]:["app"],qo=()=>{const e="https://mirror.ghproxy.com/https://github.com/railmapgen/railmapgen.github.io/releases/download",t=new Date,o="".concat(t.getFullYear()).concat(String(t.getMonth()+1).padStart(2,"0"),"01"),s="".concat(String(t.getFullYear()).slice(-2),".").concat(t.getMonth()+1,".1"),a=navigator.platform,i=a.includes("Linux")?"amd64.deb":a.includes("Mac")?"x64.dmg":"x64-setup.exe";return e+"/tauri-".concat(o,"/railmapgen_").concat(s,"_").concat(i)},g={rmg:{name:"Rail Map Generator",url:"/rmg/",assetType:"app",allowMultiInstances:!0},rmp:{name:"Rail Map Painter",url:"/rmp/",assetType:"app"},"rmg-palette":{name:"Palette",url:"/rmg-palette/",assetType:"app",showContributors:!0,legacyContributors:"legacy-contributor-list.txt"},"rmg-palette-upload":{name:"Palette - Upload",url:"/rmg-palette/#/new",assetType:"app"},"rmg-templates":{name:"RMG Templates",url:"/rmg-templates/",assetType:"app",showContributors:!0,legacyContributors:"legacy-contributor-list.txt",allowedInstances:["Org","GitHub","GitLab","Tauri","localhost","unknown"]},"rmg-templates-upload":{name:"RMG Templates - Upload",url:"/rmg-templates/#/new",assetType:"app",allowedInstances:["Org","GitHub","GitLab","Tauri","localhost","unknown"]},"rmp-gallery":{name:"RMP Gallery",url:"/rmp-gallery/",assetType:"app",showContributors:!0,showDonators:!0,allowedInstances:["Org","GitHub","GitLab","Tauri","localhost","unknown"]},"rmg-components":{name:"Components",url:"/rmg-components/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},"svg-assets":{name:"SVG Assets",url:"/svg-assets/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},"rmg-translate":{name:"Translate",url:"/rmg-translate/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},"seed-project":{name:"Seed Project",url:"/seed-project/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},"rmg-runtime":{name:"Runtime Documentation",url:"/rmg-runtime/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},"runtime-demo":{name:"Runtime Demo",url:"/runtime-demo/",assetType:"devtool",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"],allowMultiInstances:!0},tutorial:{name:"Tutorial",url:"https://rmttutorial.wordpress.com",assetType:"link"},"official-website":{name:"Official website",url:"https://railmapgen.org",assetType:"link",allowedInstances:["GitHub","GitLab","localhost","unknown"]},"github-pages":{name:"GitHub Pages mirror",url:"https://railmapgen.github.io",assetType:"link",allowedInstances:["Org","GitLab","localhost","unknown"]},"gitlab-pages":{name:"GitLab Pages mirror",url:"https://railmapgen.gitlab.io",assetType:"link",allowedInstances:["Org","GitHub","localhost","unknown"]},tauri:{name:"Download desktop app",url:qo(),assetType:"link",allowedInstances:["Org","GitHub","GitLab","localhost","unknown"]},busLineDesigner:{name:"Bus Line Designer",url:"https://buslinedesigner.bobliu.tech",assetType:"link",allowedInstances:["Org","GitHub","GitLab","Tauri","localhost","unknown"]},linesPaper:{name:"LinesPaper线图荟",url:"https://space.bilibili.com/3546659889875715",assetType:"link",allowedInstances:["Org","GitHub","GitLab","Tauri","localhost","unknown"]}},J=(e,t,o)=>Object.entries(g).filter(([,s])=>{const a=s.assetType===e,i=!s.allowedEnvs||s.allowedEnvs.includes(t),n=!s.allowedInstances||s.allowedInstances.includes(o);return a&&i&&n}).map(([s])=>s),Os="never",zo={isShowMenu:!0,menuView:"main",refreshRequired:!1,lastShowDevtools:0,openedTabs:[],activeTab:void 0,remoteFonts:{},showFontAdvice:"hide"},q=D({name:"app",initialState:zo,reducers:{setIsPrimary:(e,t)=>{e.isPrimary=t.payload},terminateSession:e=>{e.isTerminated=!0},toggleMenu:e=>{e.isShowMenu=!e.isShowMenu},setMenuView:(e,t)=>{e.menuView=t.payload},requireRefresh:e=>{e.refreshRequired=!0},showDevtools:(e,t)=>{const o=Date.now();t.payload?t.payload<o&&(e.lastShowDevtools=t.payload):e.lastShowDevtools=o},hideDevtools:e=>{e.lastShowDevtools=0},setOpenedTabs:(e,t)=>{e.openedTabs=t.payload},updateTabUrl:(e,t)=>{const{id:o,url:s}=t.payload;e.openedTabs=e.openedTabs.map(a=>a.id===o?{...a,url:s}:a)},setActiveTab:(e,t)=>{e.activeTab=t.payload},openApp:(e,t)=>{var l;const{appId:o,search:s,hash:a}=t.payload,i=e.openedTabs.find(({id:r})=>r===e.activeTab),n=e.openedTabs.find(({app:r})=>r===o),c=(l=g[o].allowMultiInstances)!=null?l:!1;if(s!==void 0||a!==void 0)if(c||!n){const r=crypto.randomUUID();e.openedTabs.push({id:r,app:o,url:R(g[o].url,s,a)}),e.activeTab=r}else e.openedTabs=e.openedTabs.map(r=>{var p;return r.id===n.id?{...r,url:R((p=r.url)!=null?p:g[r.app].url,s,a)}:r}),e.activeTab=n.id;else if(n)(i==null?void 0:i.app)!==o&&(e.activeTab=n.id);else{const r=crypto.randomUUID();e.openedTabs.push({id:r,app:o,url:R(g[o].url)}),e.activeTab=r}},openAppInNew:(e,t)=>{const o=crypto.randomUUID();e.openedTabs.push({id:o,app:t.payload}),e.activeTab=o},closeTab:(e,t)=>{var a;const o=t.payload,s=e.openedTabs.slice().sort((i,n)=>{const c=Object.keys(g);return c.indexOf(i.app)-c.indexOf(n.app)});if(e.openedTabs=e.openedTabs.filter(i=>i.id!==o),e.activeTab===o){const i=s.findIndex(n=>n.id===o);e.activeTab=(a=s.filter(n=>n.id!==o)[Math.max(0,i-1)])==null?void 0:a.id}},closeApp:(e,t)=>{var n,c;const o=t.payload;if(!e.openedTabs.some(l=>l.app===o))return;const s=Object.keys(g).filter(l=>e.openedTabs.some(r=>r.app===l)),a=(n=e.openedTabs.find(l=>l.id===e.activeTab))==null?void 0:n.app,i=e.openedTabs.filter(l=>l.app!==o);if(e.openedTabs=i,a===o){const l=s.findIndex(r=>r===o);e.activeTab=(c=i.find(r=>r.app===s[Math.max(0,l-1)]))==null?void 0:c.id}},updateTabMetadata:(e,t)=>{const{id:o,title:s,search:a,hash:i}=t.payload;e.openedTabs=e.openedTabs.map(n=>{var c;return n.id===o?{...n,title:s!=null?s:n.title,url:R((c=n.url)!=null?c:g[n.app].url,a,i)}:n})},addRemoteFont:(e,t)=>{const{family:o,config:s}=t.payload;o in e.remoteFonts||(e.remoteFonts[o]=s,e.showFontAdvice==="hide"&&(e.showFontAdvice="show"))},hideFontAdvice:e=>{e.showFontAdvice="hide"},neverShowFontAdvice:e=>{e.showFontAdvice="never"}}}),P=e=>{const t=Date.now();return e+864e5>=t},{setIsPrimary:Yo,terminateSession:Ko,toggleMenu:Ls,setMenuView:Ps,requireRefresh:xs,showDevtools:Qo,hideDevtools:_s,setOpenedTabs:Xo,updateTabUrl:Zo,setActiveTab:G,openApp:z,openAppInNew:Gs,closeTab:Is,closeApp:es,updateTabMetadata:ts,addRemoteFont:os,hideFontAdvice:Hs,neverShowFontAdvice:ss}=q.actions,ns=q.reducer,as=ae({app:ns,account:Jo}),Y=ie(),is=(e={})=>re({reducer:as,middleware:t=>t().prepend(Y.middleware),preloadedState:e}),m=is(),Ds=()=>ce(),Ns=le,A=Y.startListening;window.rmgStore=m;const rs="rmt-instance-checker",K="ping",Q="pong",X="restart",f=new BroadcastChannel(rs),Z=e=>{e.data===K&&(d.info("Received ping from another RMT instance."),f.postMessage(Q))};f.addEventListener("message",Z);f.addEventListener("message",e=>{e.data===X&&(d.info("Received restart from another RMT instance. Closing current session..."),f.close(),m.dispatch(Ko()),m.dispatch(N()))});const Us=()=>{f.postMessage(X)},cs=async()=>{let e=!0;f.addEventListener("message",o=>{o.data===Q&&(d.warn("Received pong from another RMT instance. This instance is not primary."),e=!1,f.removeEventListener("message",Z))}),f.postMessage(K);let t=5;for(;t--;)if(await Uo(500),!e)return!1;return d.info("This instance is primary."),!0},ls=e=>{const t=Number(u.storage.get(h.LAST_SHOW_DEVTOOLS));t&&e.dispatch(Qo(t))},ps=e=>{try{const t=window.localStorage.getItem(h.OPENED_TABS);if(t){const o=JSON.parse(t);if(Array.isArray(o)){const s=L(P(e.getState().app.lastShowDevtools)),a=o.filter(i=>s.includes(g[i.app].assetType));e.dispatch(Xo(a))}else d.warn("initOpenedTabs(), Cannot parse invalid opened tabs state from local storage")}}catch(t){d.warn("initOpenedTabs(), cannot parse opened apps state from local storage",t)}},ds=e=>{var s;const t=window.localStorage.getItem(h.ACTIVE_TAB),o=e.getState().app.openedTabs;t&&o.some(({id:a})=>a===t)?e.dispatch(G(t)):e.dispatch(G((s=o[0])==null?void 0:s.id))},us=e=>{var c,l,r;const t=new URLSearchParams(window.location.search),o=(c=t.get($.APP))!=null?c:"",s=(l=t.get($.SEARCH_PARAMS))!=null?l:void 0,a=(r=t.get($.HASH_PARAMS))!=null?r:void 0;d.info("openSearchedApp(), searchParams app=".concat(o,", extraSearchParams are [").concat(s,"], extraHashParams are [").concat(a,"]")),L(P(e.getState().app.lastShowDevtools)).map(p=>J(p,u.getEnv(),u.getInstance())).flat().includes(o)?e.dispatch(z({appId:o,search:s,hash:a})):d.warn("openSearchedApp(), app ".concat(o," not found"))},ms=e=>{const t=window.localStorage.getItem(h.ACCOUNT);if(t){const s=JSON.parse(t);d.debug("Get account data from local storage: ".concat(s)),e.dispatch(W(s))}setInterval(()=>{const s=e.getState().account;if(!s.isLoggedIn)return;const a=new Date(s.expires);if(new Date().getTime()>a.getTime()){d.debug("Token expires on ".concat(a," needs to be refreshed on ").concat(new Date));const i=new Date(s.refreshExpires);if(new Date().getTime()>i.getTime()){d.debug("Refresh token expires on ".concat(i,", logout!")),e.dispatch(C());return}jo(s.refreshToken).then(n=>{if(d.debug("Token refreshed with ".concat(JSON.stringify(n))),!n){e.dispatch(C());return}e.dispatch(O({access:n.access.token,refresh:n.refresh.token})),e.dispatch(Wo({expires:n.access.expires,refreshExpires:n.refresh.expires}))})}},5e3)};function hs(e){ls(e),ps(e),ds(e),ms(e),(Fo()||u.storage.get(h.SHOW_FONT_ADVICE)==="never")&&e.dispatch(ss()),A({predicate:(t,o,s)=>o.app.lastShowDevtools!==s.app.lastShowDevtools,effect:(t,o)=>{u.storage.set(h.LAST_SHOW_DEVTOOLS,o.getState().app.lastShowDevtools.toString())}}),A({predicate:(t,o,s)=>JSON.stringify(o.app.openedTabs)!==JSON.stringify(s.app.openedTabs),effect:(t,o)=>{window.localStorage.setItem(h.OPENED_TABS,JSON.stringify(o.getState().app.openedTabs))}}),A({predicate:(t,o,s)=>o.app.activeTab!==s.app.activeTab,effect:(t,o)=>{const s=o.getState().app.activeTab;s!==void 0&&window.localStorage.setItem(h.ACTIVE_TAB,s)}}),A({predicate:(t,o,s)=>o.account.isLoggedIn!==s.account.isLoggedIn,effect:(t,o)=>{const{isLoggedIn:s,id:a,name:i,email:n,token:c,expires:l,refreshToken:r,refreshExpires:p}=o.getState().account;s?window.localStorage.setItem(h.ACCOUNT,JSON.stringify({id:a,name:i,email:n,token:c,expires:l,refreshToken:r,refreshExpires:p})):(d.debug("Remove account from local storage due to logout."),window.localStorage.removeItem(h.ACCOUNT))}}),us(e),cs().then(t=>{e.dispatch(Yo(t)),t||e.dispatch(N())})}const gs=async e=>{const t=localStorage.getItem(e);if(!t)return;const o=await Bo(t);return{data:t,hash:o}},Fs=(e,t)=>{localStorage.setItem(e,t)},fs="rmt-save-manager",w=new BroadcastChannel(fs),js=()=>{w.postMessage({type:"SAVE_CHANGED",key:j.RMP,from:"rmt"})};let E;const Ts=3*1e3,ws=e=>{const t=async o=>{E||(E=window.setTimeout(async()=>{const{isLoggedIn:s,currentSaveId:a,token:i,refreshToken:n}=e.getState().account;if(!s||!a||!i||!n)return;const{type:c,key:l,from:r}=o.data;if(c==="SAVE_CHANGED"&&r==="rmp"&&(d.info("Received save changed event on key: ".concat(l)),s&&a)){d.info("Update remote save id: ".concat(a," with local key: ").concat(l));const{rep:p,token:k,refreshToken:y}=await Ss(a,i,n,l);if(!y||!k){e.dispatch(C());return}if(e.dispatch(O({access:k,refresh:y})),p.status!==200)return;e.dispatch(v())}E=void 0},Ts))};w.addEventListener("message",t)},Ss=async(e,t,o,s)=>{const a=await gs(s);if(!a)return{rep:void 0,token:void 0,refreshToken:void 0};const{data:i,hash:n}=a;return await B(S.SAVES+"/"+e,{method:"PATCH",body:JSON.stringify({data:i,hash:n})},t,o)},bs=e=>{const t=async o=>{const{type:s,from:a}=o.data;if(s==="TOKEN_REQUEST"&&a==="rmp"){d.info("Received token request event from: ".concat(a));const{isLoggedIn:i,token:n,refreshToken:c}=e.getState().account;if(!i||!n||!c){w.postMessage({type:"TOKEN_REQUEST",token:void 0,from:"rmt"});return}e.dispatch(v());const{isLoggedIn:l,token:r,refreshToken:p}=e.getState().account;if(!l||!r||!p){w.postMessage({type:"TOKEN_REQUEST",token:void 0,from:"rmt"});return}w.postMessage({type:"TOKEN_REQUEST",token:r,from:"rmt"})}};w.addEventListener("message",t)};let I;const vs=U.lazy(()=>he(()=>import("./app-root-BHxwfKlJ.js"),__vite__mapDeps([0,1,2,3,4,5]))),ks=()=>{I=ee(document.getElementById("root")),I.render(T.jsx(U.StrictMode,{children:T.jsx(pe,{store:m,children:T.jsx(de,{i18n:Do,children:T.jsx(te,{children:T.jsx(oe,{suspenseFallback:T.jsx(se,{isIndeterminate:!0}),allowReset:!0,children:T.jsx(vs,{})})})})})}))};u.ready().then(()=>{hs(m),ks(),u.onAppOpen(e=>{L(P(m.getState().app.lastShowDevtools)).map(s=>J(s,u.getEnv(),u.getInstance())).flat().includes(e.appId)&&m.dispatch(z(e))}),u.onAppClose(e=>{m.dispatch(es(e))}),u.onAppMetadataUpdate((e,t)=>{if(t){const o=t.slice(_.length);d.info("Received metadata update for frame=".concat(o,", metadata is"),e),m.dispatch(ts({...e,id:o}))}}),u.onUrlUpdate((e,t)=>{if(t){const o=t.slice(_.length);d.info("Received URL update for frame=".concat(o,", url=").concat(e)),m.dispatch(Zo({id:o,url:e}))}}),u.onRemoteFontLoaded(({family:e,definition:{displayName:t,url:o}})=>{m.dispatch(os({family:e,config:{displayName:t,url:o}}))}),u.event(F.APP_LOAD,{openedApps:m.getState().app.openedTabs.map(e=>e.app)}),ws(m),bs(m)});export{S as A,Qo as B,_s as C,xs as D,F as E,_ as F,Us as G,h as L,Os as N,j as S,ys as __vite_legacy_guard,Ds as a,B as b,Fs as c,Ps as d,b as e,v as f,gs as g,Es as h,$s as i,M as j,Ms as k,C as l,g as m,js as n,Gs as o,z as p,G as q,Is as r,O as s,Ls as t,Ns as u,es as v,J as w,Hs as x,ss as y,P as z};
